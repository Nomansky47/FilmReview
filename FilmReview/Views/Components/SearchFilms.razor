@using FilmReview.Data
@using FilmReview.Models
@using Microsoft.AspNetCore.Mvc
@using NomaniusMVC
@inject MyContext _context
<Dropdown>
    <DropdownToggle Color="Color.Success">
        Выберите тэги для поиска
    </DropdownToggle>
    <DropdownMenu>
        @foreach (var genre in Genres)
        {
            <DropdownItem ShowCheckbox CheckedChanged="@(()=>ChooseItem(genre))">@genre</DropdownItem>
        }
    </DropdownMenu>
</Dropdown>
<br />
<div class="container">
    @if (Films.FirstOrDefault() == null)
    {
        <Text>Таких фильмов нет</Text>
    }
    else
    {
        for (var i = 0; i < Films.Count; i += 4)
        {
            <div class="row">
                @for (var j = i; j < i + 4 && j < Films.Count; j++)
                {
                    double Rating = 0;
                    if (Films[j].Total != 0)
                        Rating = Math.Round((double)Films[j].Summ / (double)Films[j].Total, 1);
                    <div class="col" style="margin-bottom: 10px;">
                        <div class="card" style="max-width:290px;">
                            <img style="align-self:center;" src="@Films[j].FilmImageLink" alt="@error" width="190" height="250" />
                            <div class="card-body">
                                <h5 class="card-title">@Films[j].FilmName <Icon TextColor="TextColor.Success" Name="IconName.Star"></Icon> @Rating</h5>
                                <p class="card-text">@Films[j].Tags</p>
                                <a href="Home/FilmDetails/@Films[j].FilmID" class="btn btn-success">Подробнее</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    }
</div>

@code {
    public string error = "Картинка фильма";
    public List<Films> Films { get; set; }
    public IEnumerable<string> Genres { get; set; }
    public List<string> SelectedGenres { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Films = _context.Films.ToList();
        SelectedGenres = new List<string>();
        Genres = new HashSet<string>
        {
            "драма",
            "боевик",
            "комедия",
            "триллер",
            "исторический",
            "фантастика",
            "биография",
            "мелодрама"
        };
    }
    public async Task ChooseItem(string genre)
    {
        if (!SelectedGenres.Contains(genre))
            SelectedGenres.Add(genre);
        else SelectedGenres.Remove(genre);
        var AllFilms = _context.Films.ToList();
        if (SelectedGenres.FirstOrDefault() != null)
        {
            var TempFilms = new HashSet<Films>();
            foreach (var tag in SelectedGenres)
            {
                foreach (var film in AllFilms.Where(p => p.Tags.Contains(tag)).ToList())
                {
                    TempFilms.Add(film);
                }

            }
            Films = TempFilms.ToList();

        }
        else Films = AllFilms;
    }
}

