@using FilmReview.Data
@inject MyContext _context
@inject NavigationManager _navigationManager
<Button @onclick="ShowModal">Регистрация</Button>
<Modal @ref="ModalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Регистрация</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Никнейм</FieldLabel>
                <TextEdit @bind-Text="NickName" Placeholder="Придумайте никнейм..." />
            </Field>
            <Field>
                <FieldLabel>Логин</FieldLabel>
                <TextEdit @bind-Text="Login" Placeholder="Придумайте логин..." />
            </Field>
            <Field>
                <FieldLabel>Пароль</FieldLabel>
                <TextEdit Role="TextRole.Password" @bind-Text="Password" Placeholder="Придумайте пароль..." />
            </Field>
            <Field>
                <FieldLabel>Пароль</FieldLabel>
                <TextEdit Role="TextRole.Password" @bind-Text="Password2" Placeholder="Повторите пароль..." />
            </Field>
            <Field>
                <FieldLabel>Фамилия</FieldLabel>
                <TextEdit @bind-Text="Surname" Placeholder="Введите вашу фамилию..." />
            </Field>
            <Field>
                <FieldLabel>Имя</FieldLabel>
                <TextEdit @bind-Text="Name" Placeholder="Введите ваше имя..." />
            </Field>
            <Field>
                <FieldLabel>Отчество</FieldLabel>
                <TextEdit @bind-Text="Patronymic" Placeholder="Введите ваше отчество (если оно у вас есть)..." />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@SaveModal">Save Changes</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Snackbar @ref="SnackBarError" Color="SnackbarColor.Light">
    <SnackbarBody>
        <Text TextColor="TextColor.Danger">@Message</Text>
    </SnackbarBody>
</Snackbar>
    @code {
    private Modal ModalRef;
    private string NickName { get; set; } = "";
    private string Login { get; set; } = "";
    private string Password { get; set; } = "";
    private string Password2 { get; set; } = "";
    private string Surname { get; set; } = "";
    private string Name { get; set; } = "";
    private string? Patronymic { get; set; }
    private string Message { get; set; } = "";
    private Snackbar SnackBarError;
    private Task ShowModal()
    {
        return ModalRef.Show();
    }

    private async Task HideModal()
    {
        NickName = "";
        Patronymic = "";
        Password2 = "";
        Surname="";
        Name = "";
        Password = "";
        Login = "";
        await ModalRef.Hide();
    }
    private async Task SaveModal()
    {
        var user = _context.Users.FirstOrDefault(p => p.UserLogin == Login);
        if (Password == Password2)
        {
            if (user == null)
            {
                if (Patronymic == "") Patronymic = null;
                _navigationManager.NavigateTo("Register/" + NickName + "/" + Login + "/" + Password + "/" + Surname + "/" + Name + "/" + Patronymic, true);
            }
            else
            {
                Message = "Пользователь с таким логином уже существует";
                SnackBarError.Show();
                await ModalRef.Hide();
            }
        } else
        {
            Message = "Введенные пароли не совпадают";
            SnackBarError.Show();
        }
    }
}